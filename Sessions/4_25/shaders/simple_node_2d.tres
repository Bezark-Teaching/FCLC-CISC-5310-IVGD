[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://clp7p3dv5wxhl"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_livel"]
constant = Color(0.32549, 1, 1, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ojn6i"]
constant = Color(1, 1, 0.396078, 1)

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_bsik1"]
operator = 7

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void fragment() {
// ColorConstant:3
	vec4 n_out3p0 = vec4(1.000000, 1.000000, 0.396078, 1.000000);


// ColorConstant:2
	vec4 n_out2p0 = vec4(0.325490, 1.000000, 1.000000, 1.000000);


	vec3 n_out4p0;
// ColorOp:4
	{
		float base = vec3(n_out3p0.xyz).x;
		float blend = vec3(n_out2p0.xyz).x;
		if (base < 0.5) {
			n_out4p0.x = (base * (blend + 0.5));
		} else {
			n_out4p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out3p0.xyz).y;
		float blend = vec3(n_out2p0.xyz).y;
		if (base < 0.5) {
			n_out4p0.y = (base * (blend + 0.5));
		} else {
			n_out4p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out3p0.xyz).z;
		float blend = vec3(n_out2p0.xyz).z;
		if (base < 0.5) {
			n_out4p0.z = (base * (blend + 0.5));
		} else {
			n_out4p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
graph_offset = Vector2(-53.6759, -91.2593)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(500, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_livel")
nodes/fragment/2/position = Vector2(-160, 160)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorConstant_ojn6i")
nodes/fragment/3/position = Vector2(-160, -20)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_bsik1")
nodes/fragment/4/position = Vector2(180, 120)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 0, 0)
